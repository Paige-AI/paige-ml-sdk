[build-system]
requires = [
    "setuptools >= 65.2.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "paige-ml-sdk"
description = "Paige ml-sdk library"
readme = "README.md"
authors = [
    {name = "Paige AI", email = "info@paige.ai"}
]
license = {file = "LICENSE.txt"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy~=1.24",
    "jsonargparse[signatures]",
    "lightning~=2.1",
    "torch>=2.1,<2.3",
    "pandas>=2.0,<3",
    "environs>=9.3,<12",
    "scikit-learn~=1.1",
]
dynamic = ["version"]

[tool.setuptools.dynamic]
version = {attr = "paige.ml_sdk.version.__version__"}

[project.optional-dependencies]
all = [
    "paige-ml-sdk[test]",
]
wandb = [
    "wandb==0.16.2"
]
test = [
    "black>=22.12,<25",
    "flake8>=6.0,<8",
    "flake8-pyproject>=1.1",
    "flake8-future-import>=0.4",
    "flake8-quotes~=3.3",
    "hypothesis>=6.36",
    "isort~=5.11",
    "mypy>=0.961",
    "pytest>=7.1",
    "pytest-cov>=3.0",
    "unify>=0.5"
]

[tool.pytest.ini_options]
# Specifying `testpaths = ["tests"]` would exclude doctests
testpaths = ["tests", "src"]
addopts = """
  --doctest-modules
  --durations=10 --durations-min=1.0
"""
markers = [
    "gpu: tests that rely only on the gpu.",
    "integration: integration tests but rely only on the cpu.",
    "integration_gpu: integration tests that require a gpu.",
    "non_ci: tests that can't run on CI, for now. (deselect with '-m \"not non_ci\"')",
]

[tool.coverage.run]
branch = true
concurrency = ["multiprocessing", "thread"]
parallel = true
source = ["src/"]  # exclude pytest fixtures from other libs
omit = [
    "**/*/venv/*",
    "**/*/.git/*"
]

[tool.coverage.report]
show_missing = true
skip_covered = true
sort = "cover"
omit = [
    "**/*/venv/*",
    "**/*/.git/*"
]

[tool.black]
line-length = 100
skip-string-normalization = 1
target-version = ['py38']

[tool.isort]
line_length = 100
profile = "black"
multi_line_output = 3
skip_glob = [
    '*.git/*'
]

[tool.flake8]
max-line-length = 100
select = [
    "C",
    "E",
    "F",
    "W",
    "B",
    "B950",
    "B902",
    "Q0",
    "ABS101"
]
ignore = [
    "D203", # ignore 1 blank line required before class docstring
    "E203", # ignore whitespace before ':'
    "E501", # ignore line length too long
    "E704", # multiple statements on one line (def)
    "W503", # line break occurred before a binary operator
    "FI10", # disallow future import via flake8-future-imports
    "FI11",
    "FI12",
    "FI13",
    "FI14",
    "FI15",
    "FI16",
    "FI17",
    "FI18"
]
inline-quotes = "single"
multiline-quotes = "'''"
docstring-quotes = '"""'
exclude = [
    "build/*",
    "dist/*",
    ".eggs/*",
    ".venv/*",
    ".git/*"
]

[tool.mypy]
mypy_path = "src/"
plugins = "numpy.typing.mypy_plugin"
# in order for mypy to recognise "paige" as a namespace package
namespace_packages = true
explicit_package_bases = true
# if another library is not type hinted, let's ignore it
ignore_missing_imports = true
show_column_numbers = true
# mirroring --strict
# NOTE: this is not a final configuration discussion on what to type check will always be welcomed
warn_unused_configs = true
# TODO: type hint Any generics
#disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
# as long as we have non-type hinted dependencies we cannot enable this
#disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
strict_equality = true
exclude = [
]

[[tool.mypy.overrides]]
module = [
    "torch.cuda.*"
]
follow_imports = "skip"
follow_imports_for_stubs = true

[[tool.mypy.overrides]]
module = [
    "torch",
    "torch.*"
]
implicit_reexport = false
